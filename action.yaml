name: 'Setup Python with Dependencies'
description: 'Steps to setup Python with dependencies for build processes'
inputs:
  python-version:
    description: Version of Python to use
    type: number
    required: false
    default: 3.9
  working-dir:
    description: Working directory to use, defaults to current directory.
    default: "."
  requirements-file:
    description: "Requirements file to use"
    default: "requirements.txt"
  cache-dependency-path:
    description: Glob path of requirements files relative to working directory, if there is more than one relevant requirements file (e.g. use requirements*.txt if there is both a requirements.txt and a requirements_dev.txt)
    default: ""
  PFG_ARTIFACTORY_USERNAME:
    description: "Artifactory username"
    default: ""
  PFG_ARTIFACTORY_PASSWORD:
    description: "Artifactory password"
    default: ""
runs:
  using: composite
  steps:
    - name: Setup python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Setup Cache Hash Key Path
      id: cache-path
      shell: bash
      env:
        INPUT_CACHE_DEPENDENCY_PATH: ${{ inputs.cache-dependency-path }}
        INPUT_REQUIREMENTS_FILE: ${{ inputs.requirements-file }}
        INPUT_WORKING_DIR: ${{ inputs.working-dir }}
      run: |
        if [[ -z "$INPUT_CACHE_DEPENDENCY_PATH" ]]; then
          echo "cache-path=$INPUT_WORKING_DIR/$INPUT_REQUIREMENTS_FILE" >> $GITHUB_OUTPUT
          echo "Using requirements for cache"
        else
          echo "cache-path=$INPUT_WORKING_DIR/$INPUT_CACHE_DEPENDENCY_PATH" >> $GITHUB_OUTPUT
          echo "Using specified glob for cache"
        fi
        echo "OS: ${{ inputs.python-version }}"
    
    - name: Restore python cache
      uses: actions/cache@v4
      id: cache
      with:
        path: ${{ env.pythonLocation }}/lib/
        key: ${{ runner.os }}-pip-setup-${{ hashFiles(steps.cache-path.outputs.cache-path) }}
        
    - name: Add PFG Artifactory as a source
      if: ${{ inputs.PFG_ARTIFACTORY_USERNAME != '' }}
      uses: common-actions-pip@v0.6.0
      with:
        PYTHON_VERSION: ${{ inputs.python-version }}
        PYPI_USER: ${{ inputs.PFG_ARTIFACTORY_USERNAME }}
        PYPI_PASSWORD: ${{ inputs.PFG_ARTIFACTORY_PASSWORD }}
        SKIP_PYTHON_INSTALL: true

    - name: Install Python Deps
      shell: bash
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r ${{ inputs.requirements-file }}
      working-directory: ${{ inputs.working-dir }}
